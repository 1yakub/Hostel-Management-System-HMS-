name: 🚀 Deploy to Production

on:
  workflow_run:
    workflows: ["Laravel HMS Tests"]
    types:
      - completed
    branches:
      - main

permissions:
  deployments: write
  contents: read
  actions: read

jobs:
  deploy:
    name: 🌐 Deploy to Server
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    environment:
      name: production
      url: https://hms.yakub.website

    steps:
      - name: 🚀 Create Deployment
        uses: actions/github-script@v7
        id: deployment
        with:
          result-encoding: string
          script: |
            const deployment = await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'Auto-deployment to HMS production server',
              auto_merge: false,
              required_contexts: []
            });
            return deployment.data.id;

      - name: 🚀 Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "🚀 Starting deployment to HMS Production Server..."

            # Navigate to project directory
            cd /var/www/hostel-management

            # Pull latest changes from main branch
            echo "📥 Pulling latest changes..."
            git pull origin main

            # Install/update Composer dependencies (production optimized)
            echo "📦 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction

            # Install/update Node dependencies and build assets
            echo "🏗️ Building frontend assets..."
            npm install --production=false
            npm run build

            # Run database migrations (if any)
            echo "🗄️ Running database migrations..."
            php artisan migrate --force --no-interaction

            # Clear and optimize caches
            echo "🧹 Optimizing application caches..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan optimize

            # Ensure proper file permissions
            echo "🔐 Setting file permissions..."
            chown -R www-data:www-data storage bootstrap/cache
            chmod -R 755 storage bootstrap/cache

            # Restart web server for optimal performance
            echo "🔄 Restarting web server..."
            systemctl restart apache2

            echo "✅ Deployment completed successfully!"
            echo "🌐 HMS is now live at: https://hms.yakub.website"

      - name: ✅ Mark Deployment Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: '${{ steps.deployment.outputs.result }}',
              state: 'success',
              environment: 'production',
              environment_url: 'https://hms.yakub.website',
              description: 'Deployment completed successfully! 🎉'
            });

      - name: ❌ Mark Deployment Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeploymentStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              deployment_id: '${{ steps.deployment.outputs.result }}',
              state: 'failure',
              environment: 'production',
              description: 'Deployment failed. Check workflow logs for details.'
            });

      - name: 📊 Deployment Summary
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment SUCCESSFUL! 🎉"
            echo "🌐 Live at: https://hms.yakub.website"
          else
            echo "❌ Deployment FAILED! 😞"
            echo "Please check the logs above for details."
          fi
